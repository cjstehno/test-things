plugins {
    id 'java-library'
    id "com.github.hierynomus.license" version '0.16.1'
    id 'jacoco'
}

group = 'io.github.cjstehno.testthings'
version = '0.0.1'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    implementation 'org.slf4j:slf4j-api:2.0.3' // TODO: provided?
    implementation 'ch.qos.logback:logback-classic:1.4.4'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    api 'org.hamcrest:hamcrest-library:2.2'

    // this is required for the test extension
    compileOnly "org.junit.jupiter:junit-jupiter-api:$junitVersion"

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'

    // Test dependencies

    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'
}

test {
    useJUnitPlatform()
    maxParallelForks = Math.min(Runtime.runtime.availableProcessors(), 8)
}


jacocoTestReport {
    dependsOn test
}

license {
    header = file('config/license_header.txt')

    ignoreFailures false

    ext.year = Calendar.instance.get(Calendar.YEAR)

    excludes(['**/*.txt', '**/*.dtd', '**/*.xml', '**/*.ent', '**/*.jks', '**/*.jpg'])
}
